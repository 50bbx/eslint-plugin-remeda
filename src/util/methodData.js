"use strict";
module.exports = {
  add: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  after: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  ary: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  assign: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  assignIn: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  assignInWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  assignWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  at: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  attempt: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
  },
  before: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  bind: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  bindAll: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  bindKey: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  camelCase: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  capitalize: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  castArray: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  ceil: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  chain: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  chunk: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  clamp: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  clone: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  cloneDeep: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  cloneDeepWith: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  cloneWith: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  commit: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  concat: {
    wrapper: true,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  cond: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  conforms: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  conformsTo: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  constant: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  countBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  create: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  curry: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  curryRight: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  debounce: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  deburr: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  defaultTo: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  defaults: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  defaultsDeep: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  defer: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  delay: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  difference: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  differenceBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
  },
  differenceWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  divide: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  drop: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  dropRight: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  dropRightWhile: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 3,
  },
  dropWhile: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 3,
  },
  endsWith: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  eq: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  escape: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  escapeRegExp: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  every: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  fill: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 4,
  },
  filter: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  find: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 3,
  },
  findIndex: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 3,
  },
  findKey: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  findLast: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 3,
  },
  findLastIndex: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 3,
  },
  findLastKey: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  flatMap: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  flatMapDeep: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  flatMapDepth: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 3,
  },
  flatten: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  flattenDeep: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  flattenDepth: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  flip: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  floor: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  flow: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  flowRight: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  forEach: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  forEachRight: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  forIn: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  forInRight: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  forOwn: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  forOwnRight: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  fromPairs: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  functions: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  functionsIn: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  get: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  groupBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  gt: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  gte: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  has: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  hasIn: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  head: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  first: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  identity: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  inRange: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  includes: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  indexBy: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
  },
  indexOf: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  initial: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  intersection: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  intersectionBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
  },
  intersectionWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  invert: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  invertBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  invoke: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
  },
  invokeMap: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  isArguments: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isArray: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isArrayBuffer: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isArrayLike: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isArrayLikeObject: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isBoolean: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isBuffer: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isDate: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isElement: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isEmpty: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isEqual: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  isEqualWith: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  isError: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isFinite: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isFunction: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isInteger: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isLength: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isMap: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isMatch: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  isMatchWith: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  isNaN: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isNative: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isNil: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isNull: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isNumber: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isObject: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isObjectLike: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isPlainObject: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isRegExp: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isSafeInteger: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isSet: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isString: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isSymbol: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isTypedArray: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isUndefined: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isWeakMap: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  isWeakSet: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  iteratee: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  join: {
    wrapper: true,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  kebabCase: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  keyBy: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  keys: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  keysIn: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  last: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  lastIndexOf: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  lowerCase: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  lowerFirst: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  lt: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  lte: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  map: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  mapKeys: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  mapValues: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  matches: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  matchesProperty: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  max: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  maxBy: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  mean: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  meanBy: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  memoize: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  merge: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  mergeWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  method: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  methodOf: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  min: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  minBy: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  mixin: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  multiply: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  negate: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  next: {
    wrapper: true,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 0,
  },
  noConflict: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  noop: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  now: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  nth: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  nthArg: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  omit: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  omitBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
  },
  once: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  orderBy: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  over: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  overArgs: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  overEvery: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
  },
  overSome: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
  },
  pad: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  padEnd: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  padStart: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  parseInt: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  partial: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  partialRight: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  partition: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  pick: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  pickBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
  },
  plant: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  pop: {
    wrapper: true,
    shorthand: false,
    chainable: false,
    iteratee: false,
  },
  property: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  propertyOf: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  pull: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  pullAll: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  pullAllBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: false,
    iterateeIndex: 2,
    args: 3,
  },
  pullAllWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  pullAt: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  push: {
    wrapper: true,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  random: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  range: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  rangeRight: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  rearg: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  reduce: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 3,
  },
  reduceRight: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 3,
  },
  reject: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  remove: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  repeat: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  replace: {
    wrapper: true,
    shorthand: false,
    chainable: false,
    iteratee: false,
  },
  rest: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  result: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  reverse: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  round: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  runInContext: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  sample: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  sampleSize: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  set: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  setWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 4,
  },
  shift: {
    wrapper: true,
    shorthand: false,
    chainable: false,
    iteratee: false,
  },
  shuffle: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  size: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  slice: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  snakeCase: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  some: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  sort: {
    wrapper: true,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  sortBy: {
    wrapper: false,
    shorthand: {
      prop: true,
    },
    chainable: true,
    iteratee: true,
  },
  sortedIndex: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  sortedIndexBy: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: false,
    iterateeIndex: 2,
    args: 3,
  },
  sortedIndexOf: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  sortedLastIndex: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  sortedLastIndexBy: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: false,
    iterateeIndex: 2,
    args: 3,
  },
  sortedLastIndexOf: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  sortedUniq: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  sortedUniqBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  splice: {
    wrapper: true,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  split: {
    wrapper: true,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  spread: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  startCase: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  startsWith: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  stubArray: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  stubFalse: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  stubObject: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  stubString: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  stubTrue: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  subtract: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  sum: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  sumBy: {
    wrapper: false,
    shorthand: true,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  tail: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  take: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  takeRight: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  takeRightWhile: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  takeWhile: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  tap: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  template: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  throttle: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  thru: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  times: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: true,
    args: 2,
  },
  toArray: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  toFinite: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  toInteger: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  toLength: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  toLower: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  toNumber: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  toPairs: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  toPairsIn: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  toPath: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  toPlainObject: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  toSafeInteger: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  toString: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  toUpper: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  transform: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: true,
    args: 3,
  },
  trim: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  trimEnd: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  trimStart: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  truncate: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 3,
  },
  unary: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  unescape: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  union: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  unionBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
  },
  unionWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  uniq: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  uniqBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  uniqWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  uniqueId: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  unset: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  unshift: {
    wrapper: true,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  unzip: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  unzipWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: true,
    args: 2,
  },
  update: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 3,
  },
  updateWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 4,
  },
  upperCase: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  upperFirst: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 1,
  },
  value: {
    wrapper: true,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 0,
  },
  values: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  valuesIn: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 1,
  },
  without: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  words: {
    wrapper: false,
    shorthand: false,
    chainable: false,
    iteratee: false,
    args: 2,
  },
  wrap: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  xor: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  xorBy: {
    wrapper: false,
    shorthand: true,
    chainable: true,
    iteratee: true,
  },
  xorWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  zip: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
  zipObject: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  zipObjectDeep: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
    args: 2,
  },
  zipWith: {
    wrapper: false,
    shorthand: false,
    chainable: true,
    iteratee: false,
  },
};
